services:
  # DATABASE
  shared-postgres:
    image: postgres:15-alpine
    container_name: ecommerce-shared-postgres
    environment:
      POSTGRES_DB: ecommerce_shared_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - shared_db_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  # MICROSERVICES:

  # REPLICAS - User-Service :
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "9081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - shared-postgres
    networks:
      - ecommerce-network

  #-------------------------------------------------#
  # REPLICAS - Product-Service :
  product-service-1:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service-1
    ports:
      - "9082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - shared-postgres
    networks:
      - ecommerce-network


  product-service-2:
    build:
      context: ./product-service
      dockerfile: Dockerfile-instance-2
    container_name: product-service-2
    ports:
      - "9083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - shared-postgres
    networks:
      - ecommerce-network

  #-------------------------------------------------#
  # REPLICAS - cart-Service :
  cart-service-1:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart-service-1
    ports:
      - "9084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVICES_USER-SERVICE_URL=http://user-service:8081
      - SERVICES_PRODUCT-SERVICE_URL=http://product-service:8082
    depends_on:
      - shared-postgres
      - user-service
      - product-service-1
      - product-service-2
    networks:
      - ecommerce-network

  cart-service-2:
    build:
      context: ./cart-service
      dockerfile: Dockerfile-instance-2
    container_name: cart-service-2
    ports:
      - "9085:8085"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVICES_USER-SERVICE_URL=http://user-service:8081
      - SERVICES_PRODUCT-SERVICE_URL=http://product-service:8082
    depends_on:
      - shared-postgres
      - user-service
      - product-service-1
      - product-service-2
    networks:
      - ecommerce-network


  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "9080:8080"
    depends_on:
      - user-service
      - product-service-1
      - product-service-2
      - cart-service-1
      - cart-service-2
    networks:
      - ecommerce-network

  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    hostname: ecommerce-monitoring
    ports:
      - "19999:19999"  # Web UI
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    networks:
      - ecommerce-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - ecommerce-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3010:3010"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=3010
    networks:
      - ecommerce-network

volumes:
  shared_db_data:

networks:
  ecommerce-network:
    driver: bridge