services:
  # DATABASE
  shared-postgres:
    image: postgres:15-alpine
    container_name: ecommerce-shared-postgres
    environment:
      POSTGRES_DB: ecommerce_shared_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - shared_db_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  # MICROSERVICES
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "9081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - shared-postgres
    networks:
      - ecommerce-network

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "9082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - shared-postgres
    networks:
      - ecommerce-network

  cart-service:
    build: ./cart-service
    container_name: cart-service
    ports:
      - "9083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVICES_USER-SERVICE_URL=http://user-service:8081
      - SERVICES_PRODUCT-SERVICE_URL=http://product-service:8082
    depends_on:
      - shared-postgres
      - user-service
      - product-service
    networks:
      - ecommerce-network

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "9084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVICES_USER-SERVICE_URL=http://user-service:8081
      - SERVICES_PRODUCT-SERVICE_URL=http://product-service:8082
    depends_on:
      - shared-postgres
      - user-service
      - product-service
    networks:
      - ecommerce-network

  review-service:
    build: ./review-service
    container_name: review-service
    ports:
      - "9085:8085"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://shared-postgres:5432/ecommerce_shared_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SERVICES_USER-SERVICE_URL=http://user-service:8081
      - SERVICES_PRODUCT-SERVICE_URL=http://product-service:8082
    depends_on:
      - shared-postgres
      - user-service
      - product-service
    networks:
      - ecommerce-network

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "9080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - user-service
      - product-service
      - cart-service
      - order-service
      - review-service
    networks:
      - ecommerce-network

  # CHAOS ENGINEERING
  pumba:
    image: gaiaadm/pumba:0.9.0
    container_name: pumba
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ecommerce-network
    profiles:
      - chaos
    # Command will be specified when running chaos scenarios

  # LOAD TESTING
  jmeter:
    image: justb4/jmeter:5.5
    container_name: jmeter
    volumes:
      - ./jmeter-tests:/tests
      - ./jmeter-results:/results
    networks:
      - ecommerce-network
    profiles:
      - load-test
    # Command will be specified when running load tests

volumes:
  shared_db_data:

networks:
  ecommerce-network:
    driver: bridge